[base]
name = arch
files = {[base]name} tests setup.py

[tox]
envlist =
    functional
    unit

[testenv]
extras =
    test
setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:.coverage-{envname}}
deps =
    min_versions: Requirements-Builder
    pytest
changedir = tests/functional
commands =
    min_versions: requirements-builder --level=min --extras=test -o {envtmpdir}/requirements_min.txt setup.py
    min_versions: pip install -r {envtmpdir}/requirements_min.txt
    min_versions: pip freeze
    ./run.sh


[testenv:coverage]
skip_install = true
deps = coverage
allowlist_externals = /bin/bash
commands =
    /bin/bash -c 'coverage combine .coverage-py*'
    coverage xml
    coverage report

[testenv:check-packaging]
skip_install = true
deps =
    build
    twine
commands =
    python -m build -o {envtmpdir}/dist
    twine check {envtmpdir}/dist/*

[testenv:min_versions]
basepython = python3.11

[testenv:lint]
basepython = python3.11
deps =
    pre-commit
    pylint
commands =
    pre-commit run --all-files --show-diff-on-failure
    pylint -j {env:PYLINT_NPROCS:1} {[base]files}


[testenv:functional]
extras = all
changedir = tests/functional
commands =./run.sh

[testenv:unit]
extras = all
changedir = tests/unit
commands = pytest

[gh-actions]
python =
  3.11: py311
