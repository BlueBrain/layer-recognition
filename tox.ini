[base]
name = arch
files = {[base]name} tests setup.py

[tox]
envlist =
    lint
    py{311}
    functional

ignore_basepython_conflict = true

[testenv]
extras = all
setenv =
    PIP_INDEX_URL = https://bbpteam.epfl.ch/repository/devpi/simple
deps = {[base]testdeps}
basepython = python3.11

[testenv:lint]
deps =
    isort
    black==23.12.1
    snakefmt>=0.4.2
    codespell
    pycodestyle
    pylint
    mypy
    types-PyYAML
    types-pkg-resources
commands =
    isort --check-only --diff {[base]files}
    codespell --skip="*.xml" {[base]files} README.md CHANGELOG.rst
    black --check .
    pycodestyle {[base]files}
    pylint {[base]name}
    mypy --ignore-missing {[base]name}

[testenv:functional]
extras = all
changedir = tests/functional
commands =./run.sh


[testenv:coverage]
deps =
    {[base]testdeps}
    coverage
commands =
    coverage run --source={[base]name} -m pytest tests/unit/
    coverage report --show-missing
    coverage xml


[testenv:format]
deps =
    black==23.12.1
    isort
commands =
    isort {[base]files}
    black .

# E126 continuation line over-indented for hanging indent
# E127: continuation line over-indented for visual indent
# E128: continuation line under-indented for visual indent
# E203: whitespace before ':'
# E731: do not assign a lambda expression, use a def
# W503: Line break before binary operator
# W504: line break after binary operator
[pycodestyle]
exclude = extras,workflow,tests
ignore = E126, E127, E128, E203, E731, W503, W504
max-line-length = 100

[gh-actions]
python =
  3.11: py311