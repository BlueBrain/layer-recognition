[base]
name = arch
files = {[base]name} tests setup.py

[tox]
envlist =
    functional

[testenv]
extras =
    test
setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:.coverage-{envname}}
deps =
    min_versions: Requirements-Builder
commands =
    min_versions: requirements-builder --level=min --extras=test -o {envtmpdir}/requirements_min.txt setup.py
    min_versions: pip install -r {envtmpdir}/requirements_min.txt
    min_versions: pip freeze
    pytest \
        -n {env:PYTEST_NPROCS:4} \
        --basetemp={envtmpdir} \
        --cov={[base]name} \
        --cov-branch \
        --cov-fail-under=98 \
        --no-cov-on-fail \
        --cov-report term-missing \
        --cov-report html:reports/coverage-{envname} \
        --cov-report xml:reports/coverage-{envname}.xml \
        --html reports/pytest-{envname}.html \
        --junit-xml=reports/pytest-{envname}.xml \
        --self-contained-html \
        {posargs}

[testenv:coverage]
skip_install = true
deps = coverage
allowlist_externals = /bin/bash
commands =
    /bin/bash -c 'coverage combine .coverage-py*'
    coverage xml
    coverage report

[testenv:check-packaging]
skip_install = true
deps =
    build
    twine
commands =
    python -m build -o {envtmpdir}/dist
    twine check {envtmpdir}/dist/*

[testenv:min_versions]
basepython = python3.11

[testenv:lint]
basepython = python3.11
deps =
    pre-commit
    pylint
commands =
    pre-commit run --all-files --show-diff-on-failure
    pylint -j {env:PYLINT_NPROCS:1} {[base]files}


[testenv:functional]
extras = all
changedir = tests/functional
commands =./run.sh


[gh-actions]
python =
  3.11: py311
